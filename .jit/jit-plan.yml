name: My plan
level: beginner
author: Jit
version: 0.1
owners:
  default: null
references:
  - https://www.jit.io
tags: []
items:
  - name: Scan your API for vulnerabilities
    uses: jitsecurity-controls/jit-plans/items/runtime/item-api-security.yml@latest
  - name: Verify that Github Branch Protection is properly configured
    uses: >-
      jitsecurity-controls/jit-plans/items/third_party_app/item-branch-protection-scm.yml@latest
  - name: Scan your code for vulnerabilities (SAST)
    uses: >-
      jitsecurity-controls/jit-plans/items/code/item-code-vulnerability.yml@latest
  - name: Scan your Dockerfiles for vulnerabilities
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-container-scan.yml@latest
  - name: Scan your code dependencies for vulnerabilities (SCA)
    uses: jitsecurity-controls/jit-plans/items/code/item-dependency-check.yml@latest
  - name: Detect GitHub misconfigurations
    uses: >-
      jitsecurity-controls/jit-plans/items/third_party_app/item-github-misconfiguration.yml@latest
  - name: Scan Kubernetes configuration files
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-iac-kubernetes.yml@latest
  - name: Scan your infrastructure-as-code (IaC) for misconfigurations
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-iac-misconfiguration-detection.yml@latest
  - name: Verify that the users of your AWS accounts have enabled MFA
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-mfa-cloud-providers.yml@latest
  - name: Verify that MFA for your GitHub organization is enabled
    uses: >-
      jitsecurity-controls/jit-plans/items/third_party_app/item-mfa-scm.yml@latest
  - name: Scan infrastructure for runtime misconfigurations
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-runtime-misconfiguration-detection.yml@latest
  - name: Scan infrastructure for runtime misconfigurations (Azure)
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-runtime-misconfiguration-detection-azure.yml@latest
  - name: Scan infrastructure for runtime misconfigurations (GCP)
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-runtime-misconfiguration-detection-gcp.yml@latest
  - name: Scan code for hard-coded secrets
    uses: jitsecurity-controls/jit-plans/items/code/item-secret-detection.yml@latest
override:
  workflows:
    enrichment-code:
      jobs:
        enrich:
          steps:
            - name: Run code enrichment
              with:
                args: --path ${WORK_DIR:-.}
    docker-scan:
      jobs:
        docker-scan:
          steps:
            - name: Run trivy
              with:
                args: --quiet config --severity HIGH,CRITICAL -f json --ignorefile /opt/.trivyignore ${WORK_DIR:-.}
    remediation-pr:
      jobs:
        remediation-pr:
          steps:
            - name: Run Jit Remediation
              uses: registry.jit.io/open-remediation-pr-alpine:main
              with:
                args: --output-file "/opt/code/jit-report/results.json" --owner ${{ context.asset.owner }} --repo_name ${{ context.asset.asset_name }} --action_id ${{ context.jit_event.action_id }} --finding_id ${{ context.jit_event.finding_id }}
                env:
                  GITHUB_TOKEN: ${{fromJSON(github.event.inputs.client_payload).payload.github_token}}
                  FIX_SUGGESTION: ${{context.jit_event.fix_suggestion}}
    sast:
      jobs:
        static-code-analysis-python:
          steps:
            - name: Run Bandit
              with:
                args: -r ${WORK_DIR:-.} -f json -q -lll -iii
        static-code-analysis-js:
          steps:
            - name: Run semgrep javascript and typescript
              with:
                args: --json --config=/semgrep-ts-config.yml --metrics=off --severity=ERROR ${WORK_DIR:-.}
        static-code-analysis-python-semgrep:
          runner:
            type: github_actions
            setup:
              checkout: true
              timeout_minutes: 15
          steps:
            - name: Run semgrep python
              with:
                args: --json --config=/semgrep-python-config.yml --metrics=off --severity=ERROR ${WORK_DIR:-.}
    sca:
      jobs:
        software-component-analysis:
          steps:
            - name: Run osv-scanner
              with:
                args: --recursive ${WORK_DIR:-.}

    secret-detection:
      jobs:
        secret-detection:
          steps:
            - name: Run Gitleaks
              with:
                args: detect --config $GITLEAKS_CONFIG_FILE_PATH --source ${WORK_DIR:-.} -v --report-format json --report-path $REPORT_FILE --redact --no-git --exit-code 0

    iac-misconfiguration-detection:
      jobs:
        iac-misconfiguration-detection-terraform:
          steps:
            - name: Run KICS (terraform)
              with:
                args: scan -t Terraform -p ${WORK_DIR:-.} -o $REPORT_FILE -f json --config /terraform-config.yaml --disable-secrets

        iac-misconfig-detection-cloudformation:
          steps:
            - name: Run KICS (cloudformation)
              with:
                args: scan -t CloudFormation -p ${WORK_DIR:-.} -o $REPORT_FILE -f json --config /cloudformation-config.yaml --disable-secrets

        iac-misconfig-detection-serverless:
          steps:
            - name: Run KICS (serverless)
              with:
                args: scan -t ServerlessFW -p ${WORK_DIR:-.} -o $REPORT_FILE -f json --config /serverless-config.yaml --disable-secrets

        iac-misconfig-detection-pulumi:
          steps:
            - name: Run KICS (pulumi)
              with:
                args: scan -t Pulumi -p ${WORK_DIR:-.} -o $REPORT_FILE -f json --config /pulumi-config.yaml --disable-secrets
    
    runtime-misconfiguration-detection-azure:
      jobs:
        runtime-misconfig-detection-azure:
          runner:
            setup:
              checkout: false
            type: github_actions
          steps:
            - name: Run Prowler For Azure
              uses: registry.jit.io/prowler:latest
