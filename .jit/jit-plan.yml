name: My plan
level: beginner
author: Jit
version: 0.1
owners:
  default: null
references:
  - https://www.jit.io
tags: []
items:
  - name: Verify that Github Branch Protection is properly configured
    uses: >-
      jitsecurity-controls/jit-plans/items/third_party_app/item-branch-protection-scm.yml@latest
  - name: Import AWS Security Hub Findings
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-cloud-security-posture-management.yml@latest
  - name: Scan your Dockerfiles for vulnerabilities
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-container-scan.yml@latest
  - name: Scan Kubernetes configuration files
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-iac-kubernetes.yml@latest
  - name: Scan your infrastructure-as-code (IaC) for misconfigurations
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-iac-misconfiguration-detection.yml@latest
  - name: Verify that the users of your AWS accounts have enabled MFA
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-mfa-cloud-providers.yml@latest
  - name: Verify that MFA for your GitHub organization is enabled
    uses: >-
      jitsecurity-controls/jit-plans/items/third_party_app/item-mfa-scm.yml@latest
  - name: Use root user only by exception
    uses: >-
      jitsecurity-controls/jit-plans/items/aws_root_account/item-root-account-exception.yml@latest
  - name: Scan infrastructure for runtime misconfigurations
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-runtime-misconfiguration-detection.yml@latest
  - name: Scan infrastructure for runtime misconfigurations (Azure)
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-runtime-misconfiguration-detection-azure.yml@latest
  - name: Scan infrastructure for runtime misconfigurations (GCP)
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-runtime-misconfiguration-detection-gcp.yml@latest
  - name: Scan code for hard-coded secrets
    uses: jitsecurity-controls/jit-plans/items/code/item-secret-detection.yml@latest
  - name: Generate a Software Bill of Materials (SBOM)
    uses: >-
      jitsecurity-controls/jit-plans/items/code/item-software-bill-of-materials.yml@latest
  - name: Scan your code for vulnerabilities (SAST)
    uses: >-
      jitsecurity-controls/jit-plans/items/code/item-code-vulnerability.yml@latest
  - name: Scan your code dependencies for vulnerabilities (SCA)
    uses: jitsecurity-controls/jit-plans/items/code/item-dependency-check.yml@latest
override:
  workflows:
    api-security:
      jobs:
        api-security-detection:
          steps:
            - name: Run ZAP
              with:
                env:
                  AUTHENTICATION_VALUE: ${{ jit_secrets.api_scan_authentication_value }}
    mfa-aws-checker:
      jobs:
        mfa-aws-checker:
          steps:
            - name: Run MFA checker
              uses: 899025839375.dkr.ecr.us-east-1.amazonaws.com/aws-mfa:latest
    remediation-pr:
      jobs:
        runtime-misconfig-detection-azure:
          steps:
            - name: Run Prowler For Azure
              uses: registry.jit.io/prowler:latest
    runtime-misconfiguration-detection:
      jobs:
        runtime-misconfig-detection-aws:
          steps:
            - name: Run Prowler For AWS
              uses: >-
                899025839375.dkr.ecr.us-east-1.amazonaws.com/prowler:not-hardened-main
    runtime-misconfiguration-detection-root-account-exception:
      jobs:
        runtime-misconfig-detection-aws:
          runner:
            setup:
              auth_type: aws_iam_role
            type: github_actions
          steps:
            - name: Run Prowler For AWS
              uses: registry.jit.io/prowler:not-hardened-main
    sast:
      jobs:
        static-code-analysis-js:
          steps:
            - name: Run semgrep javascript and typescript
              with:
                args: >-
                  --json --config=/semgrep-ts-config.yml --metrics=off
                  --severity=ERROR ${WORK_DIR:-.}
